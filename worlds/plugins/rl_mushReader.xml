<?xml version="1.0" encoding="iso8859-15"?>
<!DOCTYPE muclient>
<!-- Saved on Tuesday, December 09, 2008, 2:04 PM -->
<!-- MuClient version 4.37 -->
<!-- Tomado del plugin MushReader original, por Tyler Spivey -->

<!-- Plugin "tts_NVDA" generated by Plugin Wizard -->

<muclient>
<plugin
   name="RLMushReader"
   author="Francisco R. Del Roio"
   id="16ba6b7a227a9dab54f5c76e"
   language="Lua"
   purpose="Plugin para lectores de pantalla"
   save_state="y"
   date_written="2017-05-07 09:54:00"
   requires="4.90"
   version="1.0"
   >

</plugin>
<aliases>
  <alias
   match="tts_stop"
   enabled="y"
   send_to="12"
   sequence="100"
  >
<send>stop()</send>
  </alias>
  <alias
   match="tts_interrupt *"
   enabled="y"
   send_to="12"
   sequence="100"
   script="on_interrupt"
  >
  </alias>
  <alias
   match="tts_note *"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>say([[%1]])</send>
  </alias>

  <alias
   script="TTSToggle"
   match="tts"
   enabled="y"
   group="TTS"
   omit_from_command_history="y"
   omit_from_log="y"
   omit_from_output="y"
   sequence="100"
  >
  </alias>
</aliases>


<!--  Get our standard constants -->

<include name="constants.lua"/>
<script>
<![CDATA[
require("rl_stuff")
require("ppi")

local tts_enabled = true
local ignorar_sig = false

function OnPluginInstall ()
	assert(package.loadlib("MushReader.dll", "luaopen_audio"))()
	stop()
	say("MushReader inicializado.")
end -- OnPluginInstall

function say(str)
	nvda.say(str)
end -- say

-- Exportamos esta función
ppi.Expose "say"

function stop()
	nvda.stop()
end -- stop

-- también exportamos esta
ppi.Expose "stop"

function ignorar_siguiente()
	ignorar_sig = true
end -- function

ppi.Expose "ignorar_siguiente"

function OnPluginScreendraw(t, log, line)
	if not tts_enabled then
		return
	end --tts off
	
	if t == 0 and ignorar_sig then
		ignorar_sig = false
		return
	end -- if
	
	-- checking for an empty string, or a string composed only of spaces.
	-- If we don't, NVDA says blank.
	if (t == 0 or t == 1) and not line:find("^%s*$") then
		say(line)
	end
end --function

function TTSToggle (name, line, wc)
	if tts_enabled then
		tts_enabled = false
		stop()
		say("Voz desactivada")
	else
		tts_enabled = true
		stop()
		say("Voz activada")
	end
end

function OnPluginTabComplete(word)
	if tts_enabled then
		say(word)
	end
end -- function

function on_interrupt(name, line, wildcards)
	if jfwobject and nvda.jaws_running() then
		jfwobject:SayString(utf8convert(wildcards[1], 1))
	else
		stop()
		say(utf8convert(wildcards[1]))
	end
end -- function

]]>            
</script> 
</muclient>
