<?xml version="1.0" encoding="iso8859-15"?>
<!DOCTYPE muclient [
  <!ENTITY prefijo "(?:(?:.*?)(?:\&gt; |\] |\} )|)" >
  <!ENTITY intens "(?:(con |)(débilmente |poca fuerza |fuerza |mucha fuerza |violentamente |fuerza sobrehumana |fuerza divina |increíble potencia |cólera titánica |))" >
  ]>
<!-- Saved on lunes, febrero 29, 2016, 5:53 p.m. -->
<!-- MuClient version 4.84 -->

<!-- Plugin "rl_movements" generated by Plugin Wizard -->

<muclient>
<plugin
   name="rl_movements"
   author="Francisco R. Del Roio"
   id="a0c9598da9d3d0b771e847dd"
   language="Lua"
   purpose="Permite moverse sin usar el keypad"
   date_written="2016-02-29 17:49:36"
   requires="4.84"
   version="1.0"
   >
<description trim="y">
<![CDATA[
Este plugin está diseñado para funcionar con el MUD Reinos de Leyenda, y permite moverse sin tener que usar el keypad. Además, incluye algunos triggers que hacen los viajes mas cómodos.

    http://reinosdeleyenda.es
]]>
</description>

</plugin>


<triggers>
  <trigger
   enabled="y"
   match="^&prefijo;La (?:.*?) (.*?) está cerrad[o,a]\.$"
   regexp="y"
   script="OnClosed"
   sequence="100"
   omit_from_log="y"
   omit_from_output="y"
  >
  </trigger>
  <trigger
   script="OnQuietFail"
   enabled="y"
   match="^&prefijo;Parece que sigilar (.*?) no produjo efecto alguno\.$"
   omit_from_log="y"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   match="^&prefijo;(?P&lt;room_name&gt;.*?) \[(?P&lt;room_exits&gt;[a-z\\\|\-\~\*\,]*?)\]"
   name="mirar_salidas"
   regexp="y"
   sequence="100"
   script="OnRoom"
  >
  </trigger>
</triggers>

<aliases>
  <alias
   script="OnMove"
   match="^(?P&lt;dir&gt;n|ne|e|se|s|so|o|no|ar|ab|de|fu)$"
   enabled="y"
   regexp="y"
   sequence="100"
  >
  </alias>
</aliases>

<!--  Get our standard constants -->

<include name="constants.lua"/>

<script>
<![CDATA[
require("rl_stuff")
require("re")
require "ppi"

local nav_right = false
local quiet = false
local last_move = nil
local attempts = 2

local nav_left_keys = {
	["ALT+w"]= "n",
	["ALT+e"]= "ne",
	["ALT+d"]= "e",
	["ALT+c"]= "se",
	["ALT+x"]= "s",
	["ALT+z"]= "so",
	["ALT+a"]= "o",
	["ALT+q"]= "no",
	["ALT+f"]= "ar",
	["ALT+v"]= "ab",
	["ALT+s"]= "de",
	["ALT+r"]= "fu",
	}

local std_dirs = {
	norte = "std/salidas/norte.ogg",
	noreste = "std/salidas/noreste.ogg",
	este = "std/salidas/este.ogg",
	sureste = "std/salidas/sureste.ogg",
	sur = "std/salidas/sur.ogg",
	sudoeste = "std/salidas/sudoeste.ogg",
	oeste = "std/salidas/oeste.ogg",
	noroeste = "std/salidas/noroeste.ogg",
	arriba = "std/salidas/arriba.ogg",
	abajo = "sounds/std/salidas/abajo.ogg"
}

s_dirs = {
	n = std_dirs.norte,
	ne = std_dirs.noreste,
	e = std_dirs.este,
	se = std_dirs.sureste,
	s = std_dirs.sur,
	so = std_dirs.sudoeste,
	o = std_dirs.oeste,
	no = std_dirs.noroeste,
	ar = std_dirs.arriba,
	ab = std_dirs.abajo
}

-- Esto es para agregar salidas no estándar contra el mapper
local no_estandar = {
	["cueva"] = true,
	["grieta"] = true,
	["gruta"] = true,
	["tienda"] = true,
	["herreria"] = true,
	["sastretia"] = true,
	["taller"] = true
	
	-- Faltan unos cuantos
}

local mapper = nil

function OnPluginListChanged()
	RLStuffListChanged()
	
	mapper = ppi.Load("e634c782be2e150ffc27eded")
end -- ListChanged

function OnRoom(name, line, wc)
	play_sound("std/pasos_"..math.random(1,10)..".ogg")
	attempts = 2
	
	local dirs = utils.split(wc.room_exits, ",")
	local snd_list = {}
	
	for k, v in pairs(dirs) do
		local m1 = string.match(v, "[\|\~\*\\-](%a+)[\|\~\*\\-]")
		local snd = nil
		
		if m1 ~= nil then
			snd = std_dirs[m1]
			
			if snd == nil then
				snd = s_dirs[m1]
			end -- dir
		else
			snd = std_dirs[v]
			
			if snd == nil then
				snd = s_dirs[v]
			end -- snd
		end
		
		table.insert(snd_list,  snd)
	end
	
	-- playListOfSounds(snd_list, 200, 0)
end -- OnRoom

function OnPluginInstall()
	OnPluginEnable()
end -- OnPluginInstall

function OnPluginRemove()
	OnPluginDisable()
end --  OnPluginRemove

function ToggleQuiet()
	if quiet then
		Note("Sigilar deshabilitado.")
		quiet = false
	else
		Note("Habilitando sigilar")
		quiet = true
	end
end --  function

function isQuiet()
	return quiet
end -- function
ppi.Expose("sigilar", isQuiet)

function OnPluginEnable()
	if not nav_right then
		for k, v in pairs(nav_left_keys) do
			Accelerator(k, v)
		end
	end -- nav_right
	
	AcceleratorTo("ALT+SHIFT+s", "ToggleQuiet()", sendto.script)
end -- OnPluginEnable

function OnPluginDisable()
	if not nav_right then
		for k, v in pairs(nav_left_keys) do
			Accelerator(k, "")
		end -- nav_left_keys
	end
	
	Accelerator("ALT+SHIFT+s", "")
end -- OnPluginDisable

function OnMove(n,l,wc)
	if quiet then

		Send("sigilar "..wc.dir)
	else
		Send(wc[1])
	end
end -- OnMove

function OnQuietFail(n,l,wc)
	quiet = false
end -- OnQuietFail

function OnClosed(n,l,wc)
	local  last_cmd = GetInfo(87)
	
	if attempts == 0 then
		return
	end
	
	Send("abrir "..wc[1])
	Send(wc[1])
	
	attempts = attempts - 1
end -- OnClosed

]]>
</script>

</muclient>
