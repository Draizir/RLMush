<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE muclient>
<!-- Saved on Tuesday, April 06, 2010, 8:39 AM -->
<!-- MuClient version 4.46 -->

<!-- Plugin "output_functions" generated by Plugin Wizard -->

<!-- Tomado del original, desarrollado por Oriol Gomez -->

<muclient>
<plugin
   name="rl_output_functions"
   author="Francisco R. Del Roio"
   id="a8747bac2ada2124f5cb5ff3"
save_state="y"
   language="Lua"
   purpose="provides functions to help tts users."
   date_written="2010-04-06 08:37:40"
   requires="4.46"
   version="1.0"
   >

</plugin>
<!--  Aliases  -->
<aliases>
<alias
match="toggleoutput"
enabled="y"
script="output_toggle"
omit_from_output="y"
omit_from_log="y"
omit_from_command_history="y"
send_to="12"
sequence="100">
<send>
</send>
</alias>

<alias
match="snap_shot"
enabled="y"
script="snapshot"
omit_from_output="y"
omit_from_log="y"
omit_from_command_history="y"
send_to="12"
sequence="100">
<send>
</send>
</alias>

</aliases>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Script  -->


<script>
<![CDATA[
require("rl_stuff")

function OnPluginListChanged()
	RLStuffListChanged()
end -- ListChanged

local function tts_say(texto)
	output(texto, true)
end -- function

local function tts_interrupt(texto)
	output(texto, true)
end -- function

function OnPluginEnable()
	for i = 1, 9 do
		AcceleratorTo("ctrl + "..tostring(i), string.format("LineGet(%i)", i), sendto.script)
	end
	AcceleratorTo("ctrl +0", "LineGet(10)", sendto.script)
	AcceleratorTo("ctrl+shift+o","next_line()", sendto.script)
	AcceleratorTo("ctrl+shift+i","cur_line()", sendto.script)
	AcceleratorTo("ctrl+shift+u","prev_line()", sendto.script)
	AcceleratorTo("ctrl+alt+enter","interrupt_toggle()", sendto.script)
	AcceleratorTo("ctrl+alt+o","output_toggle()", sendto.script)
	AcceleratorTo("ctrl+shift+space","selectscr()", sendto.script)
	AcceleratorTo("ctrl+shift+n","end_line()", sendto.script)
	AcceleratorTo("ctrl+shift+y","top_line()", sendto.script)
	AcceleratorTo("ctrl+shift+s","snapshot()", sendto.script)
end -- function

function OnPluginDisable()
	for i = 1, 9 do
		Accelerator("ctrl + "..tostring(i), "")
	end
	Accelerator("ctrl +0", "")
	Accelerator("ctrl+shift+o","")
	Accelerator("ctrl+alt+enter","")
	Accelerator("ctrl+alt+o","")
	Accelerator("ctrl+shift+i","")
	Accelerator("ctrl+shift+space","")
	Accelerator("ctrl+shift+u","")
	Accelerator("ctrl+shift+n","")
	Accelerator("ctrl+shift+y","")
	Accelerator("ctrl+shift+s","")
end -- function
function selectscr()
	if (selecting==0) or (selecting==nil) then
		selecting=1
		tts_interrupt("Empezar a seleccionar.")
		tselect={}
		sline=cline
	else
		tts_interrupt("Texto copiado.")
		for i=sline, cline do
			table.insert(tselect, utf8convert(GetLineInfo(i,1)))
		end
		SetClipboard(table.concat(tselect,"\n"))
		selecting=0
		tselect={}
	end
end
function output_toggle()
if(GetVariable("output")=="0") or (GetVariable("output")==nil) then
Note("Salida en notepad activado.")
SetVariable("output", "1")
else
SetVariable("output", "0")
Note("Salida en notepad desactivado.")
end
end
function interrupt_toggle()
if(GetVariable("interrupt")=="1") or (GetVariable("interrupt")==nil) then
SetVariable("interrupt", "0")
tts_interrupt("interrupt on enter off")
else
tts_interrupt("interrupt on enter on")
SetVariable("interrupt", "1")
end
end

function LineGet(wc)
lines=GetLinesInBufferCount()
line=utf8convert(GetLineInfo(lines - wc,1))
local timeout = 0.4 -- in seconds
if modes[wc] == nil then
modes[wc] = {os.clock(), 1}
elseif os.clock()-modes[wc][1] >= timeout then
modes[wc][1] = os.clock()
modes[wc][2] = 1
else
modes[wc][1] = os.clock()
modes[wc][2] = modes[wc][2] + 1
end
if modes[wc][2] > 3 then
modes[wc][2] = 3
end
if modes[wc][2] == 3 then
PasteCommand(line)
tts_interrupt("Texto pegado.")
end
if modes[wc][2] == 2 then
SetClipboard(line)
tts_interrupt("Texto copiado.")
end
if modes[wc][2] == 1 then
tts_interrupt(line)
end
end
function OnPluginCommandEntered(s)
	if world.GetVariable("interrupt")=="1" then
		silence()
	end
end
function OnPluginInstall()
modes = {} -- for keyboard states
msgbuffer={}
cline=1
line=0
mode={}
OnPluginEnable()
end
function OnPluginScreendraw(t,l,line)
if(GetVariable("output")=="0") then
return
end
if(GetInfo(113)==false) then
table.insert(msgbuffer,line)
else
AppendToNotepad("output",line.."\r\n")
end
end
function OnPluginGetFocus()
if(GetVariable("output")=="0") then
return
end
if(#msgbuffer>0) then
for i, buffered in ipairs(msgbuffer) do
AppendToNotepad("output",buffered.."\r\n")
end
msgbuffer={}
end
end
function prev_line()
lines=GetLinesInBufferCount()
if(cline<=1) then
tts_interrupt("Inicio del buffer.")
else
cline=cline-1
while(GetLineInfo(cline,1)=="") and not (cline<=1) and not (cline>=GetLinesInBufferCount()) do
cline=cline-1
end
line=GetLineInfo(cline,1)
if(line=="") then
cline=cline+1
line=GetLineInfo(cline,1)
end
tts_interrupt(line)
end
end
function cur_line()
if(cline==0) then
cline=GetLinesInBufferCount()
end
while(GetLineInfo(cline,1)=="") and not (cline<=1) and not (cline>=GetLinesInBufferCount()) do
cline=cline+1
end
line=GetLineInfo(cline,1)
if(line=="") then
cline=cline+1
line=GetLineInfo(cline,1)
end
tts_interrupt(line)
end
function next_line()
lines=GetLinesInBufferCount()
if(cline>=lines) then
tts_interrupt("Final del buffer.")
else
cline=cline+1
while(GetLineInfo(cline,1)=="") and not (cline<=1) and not (cline>=GetLinesInBufferCount()) do
cline=cline+1
end
line=GetLineInfo(cline,1)
if(line=="") then
cline=cline-1
line=GetLineInfo(cline,1)
end
tts_interrupt(line)
end
end
function end_line()
cline=GetLinesInBufferCount()
while(GetLineInfo(cline,1)=="") and not (cline<=1) and not (cline>GetLinesInBufferCount()) do
cline=cline-1
end
line=GetLineInfo(cline,1)
if(line=="") then
cline=cline+1
line=GetLineInfo(cline,1)
end
tts_interrupt(string.format("Final: %s", line))
end
function top_line()
cline=1
while(GetLineInfo(cline,1)=="") and not (cline<1) and not (cline>=GetLinesInBufferCount()) do
cline=cline+1
end
line=GetLineInfo(cline,1)
if(line=="") then
cline=cline-1
line=GetLineInfo(cline,1)
end
tts_interrupt(string.format("Principio: %s", line))
end
function snapshot()
for snapline=1, GetLinesInBufferCount() do
AppendToNotepad("snapshot",GetLineInfo(snapline,1).."\r\n")
ActivateNotepad("snapshot ")
end
end
]]>
</script>


</muclient>
