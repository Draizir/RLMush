<?xml version="1.0" encoding="iso8859-15"?>
<!DOCTYPE muclient>
<!-- Saved on sábado, marzo 05, 2016, 7:43 a.m. -->
<!-- MuClient version 4.84 -->

<!-- Plugin "rl_gmcp_charstatus" generated by Plugin Wizard -->

<muclient>
<plugin
   name="rl_gmcp_charstatus"
   author="Francisco R. Del Roio"
   id="932c6a931c26031dc51999db"
   language="Lua"
   purpose="Muestra el estado del jugador de distintos modos"
   date_written="2016-03-05 07:42:13"
   requires="4.84"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<!-- <include name="constants.lua"/> -->

<!-- script -->

<script>
<![CDATA[
require "rl_stuff"
require "json"

gmcpdata = {}
prev_data = {}

function mostrar_pvs()
	if mushreader then
		if IsConnected() then
			mushreader.say(string.format([[
			%i/%i (%i%%)
			]], gmcpdata.pvs.min, gmcpdata.pvs.max, (gmcpdata.pvs.min / gmcpdata.pvs.max) * 100))
		else
			mushreader.say("No estás conectado.")
		end -- if
	end -- if
end -- function

function mostrar_pes()
	if mushreader then
		if IsConnected() then
			mushreader.say(string.format([[
			%i/%i (%i%%)
			]], gmcpdata.pe.min, gmcpdata.pe.max, (gmcpdata.pe.min / gmcpdata.pe.max) * 100))
		else
			mushreader.say("No estás conectado.")
		end -- if
	end -- if
end -- function

function mostrar_xp()
	if mushreader then
		if IsConnected() then
			mushreader.say(string.format([[
			%i/%i (%i%%)
			]], gmcpdata.xp.min, gmcpdata.xp.max, (gmcpdata.xp.min / gmcpdata.xp.max) * 100))
		else
			mushreader.say("No estás conectado.")
		end -- if
	end -- if
end -- function

function OnPluginEnable()
	AcceleratorTo("ALT+SHIFT+v", "mostrar_pvs()", sendto.script)
	AcceleratorTo("ALT+SHIFT+b", "mostrar_pes()", sendto.script)
	AcceleratorTo("ALT+SHIFT+x", "mostrar_xp()", sendto.script)
end -- OnPluginEnable

function OnPluginInstall()
	if IsConnected() then
		Send_GMCP_Packet('Core.Supports.add ["Char 1"]')
	end -- if
	
	OnPluginEnable()
end -- OnPluginInstall

function OnPluginDisable()
	Accelerator("ALT+SHIFT+v", "")
	Accelerator("ALT+SHIFT+b", "")
	Accelerator("ALT+SHIFT+x", "")
end -- function

function OnPluginClose()
	OnPluginDisable()
end -- function

function OnPluginConnect()
	print("Conectado")
end -- function

function OnPluginDisconnect()
	data, prev_data = nil, nil
end -- function

function OnGMCPInit()
	Send_GMCP_Packet('Core.Supports.add ["Char 1"]')
end -- function

function OnGMCPReload()
	gmcpdata = {}
	prev_data = {}
end -- function

function OnGMCP(mensaje)
	if mensaje ~= "Char.Status" then
		return
	end -- if
	
	-- Primero que nada, cargamos los datos
	prev_data = gmcpdata
	gmcpdata = PedirGMCP("Char.Status")
	
	-- Tiempo de espera para reproducir el próximo
	local delay = 0
	
	-- Panning predefinido
	local pvs_pan, pes_pan, xp_pan
	
	-- Diferencias
	local pvs_delta, maxpvs_delta, pvs_faltan
	local pes_delta, maxpes_delta, pes_faltan
	local xp_delta, maxxp_delta, xp_faltan
	
	-- Primero los pvs
	pvs_faltan = gmcpdata.pvs.max - gmcpdata.pvs.min
	if not prev_data.pvs then
		-- Si no hay datos previos, se actúa como si los datos anteriores valieran 0
		pvs_delta = gmcpdata.pvs.min
		maxpvs_delta = gmcpdata.pvs.max
	else
		-- En caso de que hayan datos anteriores, la diferencia serán los actuales por sobre los anteriores
		pvs_delta = gmcpdata.pvs.min - prev_data.pvs.min
		maxpvs_delta = gmcpdata.pvs.max - prev_data.pvs.max
	end -- if
	pvs_pan = -100 + (gmcpdata.pvs.min / gmcpdata.pvs.max) * 200
	
	pes_faltan = gmcpdata.pe.max - gmcpdata.pe.min
	if not prev_data.pe then
		-- Si no hay datos previos, se actúa como si los datos anteriores valieran 0
		pes_delta = gmcpdata.pe.min
		maxpes_delta = gmcpdata.pe.max
	else
		-- En caso de que hayan datos anteriores, la diferencia serán los actuales por sobre los anteriores
		pes_delta = gmcpdata.pe.min - prev_data.pe.min
		maxpes_delta = gmcpdata.pe.max - prev_data.pe.max
	end -- if
	pes_pan = -100 + (gmcpdata.pe.min / gmcpdata.pe.max) * 200
	
	-- Este sonido se reproduce solo si las barras de pgs y pvs están completas
	if pvs_faltan == 0 and pes_faltan == 0 
		and (pvs_delta ~= 0 or pes_delta ~= 0) then
		play_sound("info/todo_completo.ogg")
		return
	end -- if
	
	require "wait"
	
	wait.make(function()
		-- Sonido para pvs completos solo si los pvs están completos y la diferencia es mayor a 0
		if pvs_faltan == 0 and pvs_delta ~= 0 then
			play_sound("info/pvs_completo.ogg")
			wait.time(0.5)
		elseif pvs_delta ~= 0 then
			play_sound("info/pvs.ogg", pvs_pan)
			wait.time(0.5)
		end -- if
		
		-- Algo similar con los pes
		if pes_faltan == 0 and pes_delta ~= 0 then
			play_sound("info/pe_completo.ogg")
			wait.time(0.5)
		elseif pes_delta ~= 0 then
			play_sound("info/pe.ogg", pes_pan)
			wait.time(0.5)
		end -- if
	end) -- function
end -- function

function OnPluginListChanged()
	RLStuffListChanged()
end -- ListChanged

]]>
</script>

</muclient>
